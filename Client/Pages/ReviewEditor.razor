@page "/review-editor/{vendor}/{chip}"
@inject IJSRuntime JS


<p>Review for @chip by @vendor</p>

<hr/>

@*If page called without a chip & vendor ask show chip vendor box*@

@*Once submitted successfully, hide the form and show pass message to user*@
@if (!_submittedSuccess)
{
    @*When submitting review show loading on page*@
    @if (_submittingReview)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    }
    else
    {
    <form id="writeReviewForm">
        <span>
            <ul class="bc-list bc-list-nostyle">
                <li class="bc-list-item" id="review-q-1">
                    <h2 id="a-rating-heading" class="bc-heading bc-color-base">
                        1. Rating
                    </h2>
                    <span>
                        <input @bind="Review.Rating"
                           type="text"
                           role="textbox"
                           id="review-title"
                           placeholder="Enter text here"
                           name="reviewTitle"
                           maxlength="50"
                           class="bc-input bc-color-base bc-color-border-focus bc-color-background-base bc-color-border-base" />
                    </span>
                </li>
                <li class="bc-list-item bc-spacing-top-base" id="review-q-2">
                    <h2 class="bc-heading">
                        2. Title
                    </h2>
                    <div id="" class="bc-row-responsive bc-spacing-top-small" style="">
                        <span class="">
                            <input @bind="Review.Title"
                               type="text"
                               role="textbox"
                               id="review-title"
                               placeholder="Enter text here"
                               name="reviewTitle"
                               maxlength="50"
                               class="bc-input bc-color-base bc-color-border-focus bc-color-background-base bc-color-border-base" />
                        </span>
                    </div>
                    <div id="" class="bc-row-responsive bc-text-right" style="">
                        <span class="bc-text bc-size-small bc-color-tertiary">
                            maximum 50 characters
                        </span>
                    </div>
                </li>
                <li class="bc-list-item bc-spacing-top-mini" id="review-q-3">
                    <h2 class="bc-heading">
                        3. Review
                    </h2>
                    <div id="" class="bc-row-responsive bc-spacing-top-small" style="">
                        <textarea @bind="Review.ReviewText" class="bc-input bc-color-base bc-color-border-focus bc-color-border-base"
                              id="review-body"
                              placeholder="Enter text here"
                              name="reviewBody"
                              style="height: 200px;"
                              role="textbox"
                              aria-multiline="true"></textarea>
                    </div>
                    <div id="" class="bc-row-responsive bc-text-right" style="">
                        <span class="bc-text bc-size-small bc-color-tertiary">
                            minimum 15 words and 25 characters
                        </span>
                    </div>
                </li>
            </ul>
        </span>
    </form>

    <button class="btn btn-warning">Cancel</button>
    <button class="btn btn-primary" @onclick="SubmitReview">Submit</button>

    }

}
else
{
    <div class="px-4 py-5 my-5 text-center">
        <img class="d-block mx-auto mb-4" src="https://getbootstrap.com/docs/5.1/assets/brand/bootstrap-logo.svg" alt="" width="72" height="57">
        <h1 class="display-5 fw-bold">Thank you.</h1>
        <div class="col-lg-6 mx-auto">
            <p class="lead mb-4">Your review will help others make informed decisions.<br/>After reviewing your review, we will put it up asap.</p>
            <div class="d-grid gap-2 d-sm-flex justify-content-sm-center">
                <a href="@vendor/@chip"><button type="button" class="btn btn-primary btn-lg px-4 gap-3">Back to chip page</button></a>
                <button type="button" class="btn btn-outline-secondary btn-lg px-4">Write another review</button>
            </div>
        </div>
    </div>
}







@code {

    //VARIABLES
    [Parameter]
    public string? vendor { get; set; }
    [Parameter]
    public string? chip { get; set; }
    //the new review is stored as it is made
    private BlazorApp.Shared.Review Review { get; set; }
    //keeps track if the review was submitted successfully
    private bool _submittedSuccess = false;
    //true when review is being submitted
    private bool _submittingReview = false;




    //CTOR
    public ReviewEditor()
    {
        //an empty review is placed first //todo could place a static template
        Review = new BlazorApp.Shared.Review();
    }



    //FUNCTIONS
    protected override async Task OnInitializedAsync()
    {
        //imports js //todo temp for reference
        var js = await JS.InvokeAsync<IJSObjectReference>("import", "./Pages/ReviewEditor.razor.js");
    }

    //sends the newly created review to API
    private async void SubmitReview()
    {
        //add in the chip & vendor details
        Review.Chip = chip;
        Review.Vendor = vendor;


        _submittingReview = true;

        //send to api server & get response
        var response = await ServerManager.AddNewReview(Review);

        //mark it if it passed or failed
        _submittedSuccess = response.IsPass();

        this.StateHasChanged();
    }

}