@page "/{vendor}/{chip}"
@inject HttpClient Http


<PageTitle>@chip | Review</PageTitle>

<p>Chip : @chip</p>
<p>Vendor : @vendor</p>
<p>Rating : @vendor</p>


<p>Reviews</p>
@if (forecasts == null)
{
    <p><em>Loading reviews...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Username</th>
                <th>Rating</th>
                <th>Review</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts = new WeatherForecast[]{};

    protected override async Task OnInitializedAsync()
    {
        try
        {
            forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("/api/WeatherForecast") ?? new WeatherForecast[]{};
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }
}




@code {
    [Parameter]
    public string? vendor { get; set; }
    [Parameter]
    public string? chip { get; set; }
}


@functions {
    string message;

    protected override async Task OnInitializedAsync()
    {
        //call is made to azure function
        message = await Http.GetStringAsync("/api/GetReview");
       
    }
}
